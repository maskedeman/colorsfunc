"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./pages/home/algo.jsx":
/*!*****************************!*\
  !*** ./pages/home/algo.jsx ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\nfunction PaletteExtractor() {\n    _s();\n    const [palette, setPalette] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const handlePaletteExtraction = ()=>{\n        // Replace this with the logic to get the pixel data from your image\n        getPixelDataFromImage().then((pixelData)=>{\n            // Call the palette extraction function\n            const extractedPalette = getPalette(pixelData, 3);\n            // Set the extracted palette to the state\n            setPalette(extractedPalette);\n        }).catch((error)=>{\n            console.error(\"Error getting pixel data: \", error);\n        });\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: handlePaletteExtraction,\n                children: \"Extract Palette\"\n            }, void 0, false, {\n                fileName: \"D:\\\\Aman\\\\projects\\\\apiInt\\\\colorsfunc\\\\pages\\\\home\\\\algo.jsx\",\n                lineNumber: 22,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"palette\",\n                children: palette.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                            children: \"Extracted Palette\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\Aman\\\\projects\\\\apiInt\\\\colorsfunc\\\\pages\\\\home\\\\algo.jsx\",\n                            lineNumber: 26,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                            children: palette.map((color, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                    style: {\n                                        backgroundColor: \"rgb(\".concat(color.join(\", \"), \")\")\n                                    },\n                                    children: [\n                                        \"RGB: \",\n                                        color.join(\", \")\n                                    ]\n                                }, index, true, {\n                                    fileName: \"D:\\\\Aman\\\\projects\\\\apiInt\\\\colorsfunc\\\\pages\\\\home\\\\algo.jsx\",\n                                    lineNumber: 29,\n                                    columnNumber: 17\n                                }, this))\n                        }, void 0, false, {\n                            fileName: \"D:\\\\Aman\\\\projects\\\\apiInt\\\\colorsfunc\\\\pages\\\\home\\\\algo.jsx\",\n                            lineNumber: 27,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"D:\\\\Aman\\\\projects\\\\apiInt\\\\colorsfunc\\\\pages\\\\home\\\\algo.jsx\",\n                    lineNumber: 25,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"D:\\\\Aman\\\\projects\\\\apiInt\\\\colorsfunc\\\\pages\\\\home\\\\algo.jsx\",\n                lineNumber: 23,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\Aman\\\\projects\\\\apiInt\\\\colorsfunc\\\\pages\\\\home\\\\algo.jsx\",\n        lineNumber: 21,\n        columnNumber: 5\n    }, this);\n}\n_s(PaletteExtractor, \"PlcWD9/oGOWZ8fgqCAkUqG9UF8U=\");\n_c = PaletteExtractor;\n// Rest of your palette extraction functions (getPalette, getAverageColor, etc.) remain unchanged\n// Implement the getPixelDataFromImage function here\nasync function getPixelDataFromImage() {\n    return new Promise((resolve, reject)=>{\n        const image = new Image();\n        // Replace this with the actual image path\n        image.src = \"path-to-your-image.jpg\";\n        image.onload = ()=>{\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = image.width;\n            canvas.height = image.height;\n            const context = canvas.getContext(\"2d\");\n            context.drawImage(image, 0, 0);\n            const imageData = context.getImageData(0, 0, image.width, image.height);\n            const pixelData = imageData.data;\n            resolve(pixelData);\n        };\n        image.onerror = (error)=>{\n            reject(error);\n        };\n    });\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (PaletteExtractor);\nvar _c;\n$RefreshReg$(_c, \"PaletteExtractor\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9ob21lL2FsZ28uanN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBd0M7QUFFeEMsU0FBU0U7O0lBQ1AsTUFBTSxDQUFDQyxTQUFTQyxXQUFXLEdBQUdILCtDQUFRQSxDQUFDLEVBQUU7SUFFekMsTUFBTUksMEJBQTBCO1FBQzlCLG9FQUFvRTtRQUNwRUMsd0JBQ0dDLElBQUksQ0FBQyxDQUFDQztZQUNMLHVDQUF1QztZQUN2QyxNQUFNQyxtQkFBbUJDLFdBQVdGLFdBQVc7WUFDL0MseUNBQXlDO1lBQ3pDSixXQUFXSztRQUNiLEdBQ0NFLEtBQUssQ0FBQyxDQUFDQztZQUNOQyxRQUFRRCxLQUFLLENBQUMsOEJBQThCQTtRQUM5QztJQUNKO0lBRUEscUJBQ0UsOERBQUNFOzswQkFDQyw4REFBQ0M7Z0JBQU9DLFNBQVNYOzBCQUF5Qjs7Ozs7OzBCQUMxQyw4REFBQ1M7Z0JBQUlHLFdBQVU7MEJBQ1pkLFFBQVFlLE1BQU0sR0FBRyxtQkFDaEIsOERBQUNKOztzQ0FDQyw4REFBQ0s7c0NBQUc7Ozs7OztzQ0FDSiw4REFBQ0M7c0NBQ0VqQixRQUFRa0IsR0FBRyxDQUFDLENBQUNDLE9BQU9DLHNCQUNuQiw4REFBQ0M7b0NBRUNDLE9BQU87d0NBQUVDLGlCQUFpQixPQUF3QixPQUFqQkosTUFBTUssSUFBSSxDQUFDLE9BQU07b0NBQUc7O3dDQUN0RDt3Q0FDT0wsTUFBTUssSUFBSSxDQUFDOzttQ0FIWko7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVl2QjtHQXZDU3JCO0tBQUFBO0FBeUNULGlHQUFpRztBQUVqRyxvREFBb0Q7QUFDcEQsZUFBZUk7SUFDYixPQUFPLElBQUlzQixRQUFRLENBQUNDLFNBQVNDO1FBQzNCLE1BQU1DLFFBQVEsSUFBSUM7UUFDbEIsMENBQTBDO1FBQzFDRCxNQUFNRSxHQUFHLEdBQUc7UUFDWkYsTUFBTUcsTUFBTSxHQUFHO1lBQ2IsTUFBTUMsU0FBU0MsU0FBU0MsYUFBYSxDQUFDO1lBQ3RDRixPQUFPRyxLQUFLLEdBQUdQLE1BQU1PLEtBQUs7WUFDMUJILE9BQU9JLE1BQU0sR0FBR1IsTUFBTVEsTUFBTTtZQUM1QixNQUFNQyxVQUFVTCxPQUFPTSxVQUFVLENBQUM7WUFDbENELFFBQVFFLFNBQVMsQ0FBQ1gsT0FBTyxHQUFHO1lBQzVCLE1BQU1ZLFlBQVlILFFBQVFJLFlBQVksQ0FBQyxHQUFHLEdBQUdiLE1BQU1PLEtBQUssRUFBRVAsTUFBTVEsTUFBTTtZQUN0RSxNQUFNL0IsWUFBWW1DLFVBQVVFLElBQUk7WUFDaENoQixRQUFRckI7UUFDVjtRQUNBdUIsTUFBTWUsT0FBTyxHQUFHLENBQUNsQztZQUNma0IsT0FBT2xCO1FBQ1Q7SUFDRjtBQUNGO0FBRUEsK0RBQWVWLGdCQUFnQkEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9wYWdlcy9ob21lL2FsZ28uanN4P2M3MTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XHJcblxyXG5mdW5jdGlvbiBQYWxldHRlRXh0cmFjdG9yKCkge1xyXG4gIGNvbnN0IFtwYWxldHRlLCBzZXRQYWxldHRlXSA9IHVzZVN0YXRlKFtdKTtcclxuXHJcbiAgY29uc3QgaGFuZGxlUGFsZXR0ZUV4dHJhY3Rpb24gPSAoKSA9PiB7XHJcbiAgICAvLyBSZXBsYWNlIHRoaXMgd2l0aCB0aGUgbG9naWMgdG8gZ2V0IHRoZSBwaXhlbCBkYXRhIGZyb20geW91ciBpbWFnZVxyXG4gICAgZ2V0UGl4ZWxEYXRhRnJvbUltYWdlKClcclxuICAgICAgLnRoZW4oKHBpeGVsRGF0YSkgPT4ge1xyXG4gICAgICAgIC8vIENhbGwgdGhlIHBhbGV0dGUgZXh0cmFjdGlvbiBmdW5jdGlvblxyXG4gICAgICAgIGNvbnN0IGV4dHJhY3RlZFBhbGV0dGUgPSBnZXRQYWxldHRlKHBpeGVsRGF0YSwgMyk7XHJcbiAgICAgICAgLy8gU2V0IHRoZSBleHRyYWN0ZWQgcGFsZXR0ZSB0byB0aGUgc3RhdGVcclxuICAgICAgICBzZXRQYWxldHRlKGV4dHJhY3RlZFBhbGV0dGUpO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGdldHRpbmcgcGl4ZWwgZGF0YTogXCIsIGVycm9yKTtcclxuICAgICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXY+XHJcbiAgICAgIDxidXR0b24gb25DbGljaz17aGFuZGxlUGFsZXR0ZUV4dHJhY3Rpb259PkV4dHJhY3QgUGFsZXR0ZTwvYnV0dG9uPlxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInBhbGV0dGVcIj5cclxuICAgICAgICB7cGFsZXR0ZS5sZW5ndGggPiAwICYmIChcclxuICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgIDxoMj5FeHRyYWN0ZWQgUGFsZXR0ZTwvaDI+XHJcbiAgICAgICAgICAgIDx1bD5cclxuICAgICAgICAgICAgICB7cGFsZXR0ZS5tYXAoKGNvbG9yLCBpbmRleCkgPT4gKFxyXG4gICAgICAgICAgICAgICAgPGxpXHJcbiAgICAgICAgICAgICAgICAgIGtleT17aW5kZXh9XHJcbiAgICAgICAgICAgICAgICAgIHN0eWxlPXt7IGJhY2tncm91bmRDb2xvcjogYHJnYigke2NvbG9yLmpvaW4oXCIsIFwiKX0pYCB9fVxyXG4gICAgICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAgICBSR0I6IHtjb2xvci5qb2luKFwiLCBcIil9XHJcbiAgICAgICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICAgICkpfVxyXG4gICAgICAgICAgICA8L3VsPlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgKX1cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59XHJcblxyXG4vLyBSZXN0IG9mIHlvdXIgcGFsZXR0ZSBleHRyYWN0aW9uIGZ1bmN0aW9ucyAoZ2V0UGFsZXR0ZSwgZ2V0QXZlcmFnZUNvbG9yLCBldGMuKSByZW1haW4gdW5jaGFuZ2VkXHJcblxyXG4vLyBJbXBsZW1lbnQgdGhlIGdldFBpeGVsRGF0YUZyb21JbWFnZSBmdW5jdGlvbiBoZXJlXHJcbmFzeW5jIGZ1bmN0aW9uIGdldFBpeGVsRGF0YUZyb21JbWFnZSgpIHtcclxuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgY29uc3QgaW1hZ2UgPSBuZXcgSW1hZ2UoKTtcclxuICAgIC8vIFJlcGxhY2UgdGhpcyB3aXRoIHRoZSBhY3R1YWwgaW1hZ2UgcGF0aFxyXG4gICAgaW1hZ2Uuc3JjID0gXCJwYXRoLXRvLXlvdXItaW1hZ2UuanBnXCI7XHJcbiAgICBpbWFnZS5vbmxvYWQgPSAoKSA9PiB7XHJcbiAgICAgIGNvbnN0IGNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIik7XHJcbiAgICAgIGNhbnZhcy53aWR0aCA9IGltYWdlLndpZHRoO1xyXG4gICAgICBjYW52YXMuaGVpZ2h0ID0gaW1hZ2UuaGVpZ2h0O1xyXG4gICAgICBjb25zdCBjb250ZXh0ID0gY2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcclxuICAgICAgY29udGV4dC5kcmF3SW1hZ2UoaW1hZ2UsIDAsIDApO1xyXG4gICAgICBjb25zdCBpbWFnZURhdGEgPSBjb250ZXh0LmdldEltYWdlRGF0YSgwLCAwLCBpbWFnZS53aWR0aCwgaW1hZ2UuaGVpZ2h0KTtcclxuICAgICAgY29uc3QgcGl4ZWxEYXRhID0gaW1hZ2VEYXRhLmRhdGE7XHJcbiAgICAgIHJlc29sdmUocGl4ZWxEYXRhKTtcclxuICAgIH07XHJcbiAgICBpbWFnZS5vbmVycm9yID0gKGVycm9yKSA9PiB7XHJcbiAgICAgIHJlamVjdChlcnJvcik7XHJcbiAgICB9O1xyXG4gIH0pO1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQYWxldHRlRXh0cmFjdG9yO1xyXG4iXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VTdGF0ZSIsIlBhbGV0dGVFeHRyYWN0b3IiLCJwYWxldHRlIiwic2V0UGFsZXR0ZSIsImhhbmRsZVBhbGV0dGVFeHRyYWN0aW9uIiwiZ2V0UGl4ZWxEYXRhRnJvbUltYWdlIiwidGhlbiIsInBpeGVsRGF0YSIsImV4dHJhY3RlZFBhbGV0dGUiLCJnZXRQYWxldHRlIiwiY2F0Y2giLCJlcnJvciIsImNvbnNvbGUiLCJkaXYiLCJidXR0b24iLCJvbkNsaWNrIiwiY2xhc3NOYW1lIiwibGVuZ3RoIiwiaDIiLCJ1bCIsIm1hcCIsImNvbG9yIiwiaW5kZXgiLCJsaSIsInN0eWxlIiwiYmFja2dyb3VuZENvbG9yIiwiam9pbiIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiaW1hZ2UiLCJJbWFnZSIsInNyYyIsIm9ubG9hZCIsImNhbnZhcyIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsIndpZHRoIiwiaGVpZ2h0IiwiY29udGV4dCIsImdldENvbnRleHQiLCJkcmF3SW1hZ2UiLCJpbWFnZURhdGEiLCJnZXRJbWFnZURhdGEiLCJkYXRhIiwib25lcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/home/algo.jsx\n"));

/***/ })

});